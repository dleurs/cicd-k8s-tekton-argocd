apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: {{ .Values.tekton.task.name }}
spec:
  params:
    - name: pathToDockerFile
      type: string
      description: The path to the dockerfile to build
      default: $(resources.inputs.git-source.path)/Dockerfile
    - name: pathToContext
      type: string
      description: |
        The build context used by Kaniko
        (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
      default: $(resources.inputs.git-source.path)
  resources:
    inputs:
      - name: git-source
        type: git
    outputs:
      - name: builtImage
        type: image
  steps:
    - name: build-and-push
      image: "gcr.io/kaniko-project/executor:{{ .Values.tekton.task.kanikoVersion }}"
      # specifying DOCKER_CONFIG is required to allow kaniko to detect docker credential
      env:
        - name: "DOCKER_CONFIG"
          value: "/tekton/home/.docker/"
      command:
        - /kaniko/executor
      args:
        - --dockerfile=$(params.pathToDockerFile)
        - --destination=$(resources.outputs.builtImage.url)
        - --context=$(params.pathToContext)
---
apiVersion: tekton.dev/v1beta1
kind: TaskRun
metadata:
  name: {{ .Values.tekton.taskRun.name }}-{{ .Chart.AppVersion | replace "." "-" }}
spec:
  serviceAccountName: {{ .Values.tekton.serviceAccount.name }}
  taskRef:
    name: {{ .Values.tekton.task.name }}
  params:
    - name: pathToDockerFile
      value: {{ .Values.tekton.taskRun.pathToDockerFile | default "Dockerfile" }} 
    - name: pathToContext
      value: {{ .Values.tekton.taskRun.pathToContext | default "/workspace/git-source" }} 
  resources:
    inputs:
      - name: git-source
        resourceRef:
          name: {{ .Values.tekton.gitSourceResc.name }}
    outputs:
      - name: builtImage
        resourceRef:
          name: {{ .Values.tekton.dockerTargetResc.name }}